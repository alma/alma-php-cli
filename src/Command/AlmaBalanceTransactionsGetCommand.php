<?php

namespace App\Command;

use App\Command\Meta\AbstractReadAlmaCustomListCommand;
use InvalidArgumentException;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;

class AlmaBalanceTransactionsGetCommand extends AbstractReadAlmaCustomListCommand
{
    protected static $defaultName        = 'alma:balance-transactions:get';
    protected static $defaultDescription = 'Call /v1/balance-transactions endpoint';
    const CUSTOM_ENDPOINT_URI            = '/v1/balance-transactions';
    const AVAILABLE_KINDS = [
        'from_transaction',
        'from_adjustment',
        'from_payout',
        'from_refund',
        'from_fee_waiver',
        'from_merchant_default_coverage',
    ];

    public function configure()
    {
        parent::configure(); // TODO: Change the autogenerated stub
        $this
            ->addOption('kind', 'k', InputOption::VALUE_REQUIRED, sprintf('one of following available kind [%s]', implode(', ', self::AVAILABLE_KINDS)))
            ->addOption('after', 'a', InputOption::VALUE_REQUIRED, 'starting_after balance_txn_id')
        ;
    }

    /**
     * @param array          $queryParams
     * @param InputInterface $input
     *
     * @return array
     * @override
     */
    protected function bindParams(array $queryParams, InputInterface $input): array
    {
        if ($kind = $input->getOption('kind')) {
            if (!in_array($kind, self::AVAILABLE_KINDS)) {
                throw new InvalidArgumentException("$kind: bad kind !");
            }
            $queryParams['kind'] = $kind;
        }
        if ($txnId = $input->getOption('after')) {
            $queryParams['starting_after'] = $txnId;
        }

        return $queryParams;
    }
}
